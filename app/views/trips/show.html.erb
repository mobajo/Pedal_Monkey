<% start_address = @trip.stages.first.start_point %>
<% destination_address = @trip.stages.last.end_point %>
<div>
  <div id="directions" class="map-top"></div>
</div>

<div class="container">
  <div class="col-xs-12 content-box-trip">
    <div class="content-headline-green">
      <h4>Your trip: From <%= @trip.stages.first.start_point.address %> to <%= @trip.stages.last.end_point.address %></h4>
    </div>
    <div class="col-xs-12 col-sm-3 text-center">
      <h3>Total distance:</h3>
      <h1>132</h1>
      <h3>Kilometers</h3>
    </div>
    <div class="col-xs-12 col-sm-3 text-center">
      <h3>Average</h3>
      <h1>44</h1>
      <h3>Km/day</h3>
    </div>
    <div class="col-xs-12 col-sm-3 text-center">
      <h3>Duration</h3>
      <h1><%= @trip.stages.count %></h1>
      <h3>Days</h3>
    </div>
    <div class="col-xs-12 col-sm-3 text-center">
      <h3>Team members</h3>
      <h1><%= @trip.trip_members.count %></h1>
      <h3>Bike riders</h3>
    </div>
  </div>

<!--   <div class="row">
    <div class="col-xs-12 content-box">
      <div class="content-headline-green">
        <h4>Team members</h4>
      </div>
      <div class="col-xs-12 col-sm-3 text-center">
      <h3>Trip owner</h3>
      cl_image_tag @trip.trip_members.first.user.photo.path, class: "avatar-large avatar-bordered"
    </div>
    <div class="col-xs-12 col-sm-3 text-center">
      <h3>Average</h3>
      <h1>44</h1>
      <h3>Km/day</h3>
    </div>
    <div class="col-xs-12 col-sm-3 text-center">
      <h3>Duration</h3>
      <h1><%= @trip.stages.count %></h1>
      <h3>Days</h3>
    </div>
    </div>
  </div> -->

  <div class="row">
    <div class="col-xs-12 col-sm-3">

      <% @stages.each do |stage| %>
      <div class="col-xs-12 content-box">
        <div class="content-headline-green">
          <h4>Stage <%= stage.stage_no %></h4>
        </div>
        <p><strong>Date:</strong> <%= stage.stage_date %></p>
        <p><strong>Start:</strong> <%= stage.start_point.address %></p>
        <p><strong>Finish:</strong> <%= stage.end_point.address %></p>
      </div>
      <% end %>

    </div>
    
    <div class="col-xs-12 col-sm-9">

      <div class="col-xs-12 content-box">
        <div class="content-headline-green">
          <h4>Adjust your waypoints</h4>
        </div>
        <div>
          <div id="directions2" style='width: 100%; min-height: 800px;'></div>
        </div>
      </div>

    </div>
  </div>
</div>


<!-- <div id="floating-panel">
  <form action="" method="post">
    <label for="start">Where should your trip start?</label>
    <input id="start" type="text" name="Start of trip" placeholder="KÃ¸benhavn">
    <label for="via">via</label>
    <input id="via" type="text" name="via" placeholder="Berlin">
    <label for="end">Where should your trip end?</label>
    <input id="end" type="text" name="End of trip" placeholder="Paris">
    <button onclick="calcRoute()">Find route</button> 
  </form>
</div> -->

<%= content_for(:after_js) do %>
<script>

  var directionsDisplay = new google.maps.DirectionsRenderer();
  var directionsService = new google.maps.DirectionsService();

  function calcRoute() {
    /* var origin      = new google.maps.LatLng(55.676097, 12.568337); */
    /* var destination = new google.maps.LatLng(55.663895, 12.542540); */

    var waypts = [];
    <% @trip.stages.each do |stage|  %>
    <% break if stage.end_point.final_stop? %>
    var stop = '<%= raw stage.end_point.address %>'
    waypts.push({
      location: stop,
      stopover: true,
    });
    <% end %>
    console.log(waypts)

    var request = {
      origin:             '<\%= start_address \%>',  
      /* document.getElementById('start').value, */
      destination:        '<\%= destination_address \%>',
      waypoints:          waypts,
      optimizeWaypoints:  true,
      travelMode:         google.maps.TravelMode.BICYCLING

    };
    directionsService.route(request, function(response, status) {
      if (status == google.maps.DirectionsStatus.OK) {
        directionsDisplay.setDirections(response);
        
        const leg_array = response.routes[0].legs

        leg_array.forEach((leg) => {
         console.log(leg.distance.value / 1000);  
       });

        leg_array.forEach((leg) => {
         console.log(leg.duration.text );  
       });

        /* response.routes[0].legs[1].distance.value; */
        /* alert( response.routes[0].legs[1].duration.text ); */
      }
    });
  }


  calcRoute();

  var handler = Gmaps.build('Google');
  handler.buildMap({ internal: {id: 'directions'}}, function(){
    directionsDisplay.setMap(handler.getMap());
  });
</script>

<script>

  var directionsDisplay = new google.maps.DirectionsRenderer();
  var directionsService = new google.maps.DirectionsService();

  function calcRoute() {
    /* var origin      = new google.maps.LatLng(55.676097, 12.568337); */
    /* var destination = new google.maps.LatLng(55.663895, 12.542540); */

    var waypts = [];
    <% @trip.stages.each do |stage|  %>
    <% break if stage.end_point.final_stop? %>
    var stop = '<%= raw stage.end_point.address %>'
    waypts.push({
      location: stop,
      stopover: true,
    });
    <% end %>
    console.log(waypts)

    var request = {
      origin:             '<\%= start_address \%>',  
      /* document.getElementById('start').value, */
      destination:        '<\%= destination_address \%>',
      waypoints:          waypts,
      optimizeWaypoints:  true,
      travelMode:         google.maps.TravelMode.BICYCLING

    };
    directionsService.route(request, function(response, status) {
      if (status == google.maps.DirectionsStatus.OK) {
        directionsDisplay.setDirections(response);
        
        const leg_array = response.routes[0].legs

        leg_array.forEach((leg) => {
         console.log(leg.distance.value / 1000);  
       });

        leg_array.forEach((leg) => {
         console.log(leg.duration.text );  
       });

        /* response.routes[0].legs[1].distance.value; */
        /* alert( response.routes[0].legs[1].duration.text ); */
      }
    });
  }


  calcRoute();

  var handler = Gmaps.build('Google');
  handler.buildMap({ internal: {id: 'directions2'}}, function(){
    directionsDisplay.setMap(handler.getMap());
  });
</script>

<% end %>
