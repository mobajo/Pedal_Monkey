<h1>index</h1>  







<div style='width: 800px;'>
  <div id="directions" style='width: 800px; height: 400px;'></div>
</div>

    <% start_address = @trip.stages.first.start_point.address %>
    <% destination_address = @trip.stages.last.end_point.address %>

<%= content_for(:after_js) do %>
<script>

  var directionsDisplay = new google.maps.DirectionsRenderer();
  var directionsService = new google.maps.DirectionsService();

  function calcRoute() {
    /* var origin      = new google.maps.LatLng(55.676097, 12.568337); */
    /* var destination = new google.maps.LatLng(55.663895, 12.542540); */

   /* var waypts = [];
     <% @trip.stages.each do |stage|  %>
      <% break if stage.end_point.final_stop? %> 
      var stop = '<%= raw stage.end_point.address %>' 
      var stop = '<%= raw stage.end_point.address %>'
      waypts.push({
          location: stop,
          stopover: true,
      });
    <% end %>
    console.log(waypts) */

    var request = {
      origin:             '<%= start_address %>',  
      /* document.getElementById('start').value, */
      destination:        '<%= destination_address %>',
      /* waypoints:          waypts,
      optimizeWaypoints:  true, */
      travelMode:         google.maps.TravelMode.BICYCLING

    };
    directionsService.route(request, function(response, status) {
      if (status == google.maps.DirectionsStatus.OK) {
        directionsDisplay.setDirections(response);
        
        numberOfWaypoints = 3
        totalTripDistance = response.routes[0].legs[0].distance.value

        wayPointInterval = totalTripDistance / numberOfWaypoints 

        console.log(wayPointInterval);

        wayPointsDistance = [wayPointInterval]

		let i = wayPointsDistance;
		while (i.length <= (numberOfWaypoints - 2)) {

		  i.push(wayPointInterval += wayPointInterval);
		}
		  console.log(i)



        const leg_array = response.routes[0].legs

         leg_array.forEach((leg) => {
         console.log(leg.duration.text );  
        });


         let totalmeters = 0;

       /*  kmtest.forEach((step) => {
         totalmeters += step.distance.value;  
        }); */


        let kmtest = response.routes[0].legs[0].steps;
		let step_array = []

          wayPointsDistance.forEach((waypoint) => {
			let i = 0;
		
			while (i <= waypoint) {
	  	console.log(waypoint);

			  kmtest.forEach((step) => {
			  	i += step.distance.value;
			  	step_array.push(step.start_location.lat)
	  	console.log("lat: " + step.start_location.lat());
	  	console.log("lng: " + step.start_location.lng());
	  	debugger
	  	console.log(typeof(step.start_location));
			  });
			};
        });

        wayPointsCoordinates = []
        console.log(step_array);






        /* console.log(totalmeters) */
         /* response.routes[0].legs[1].distance.value; */
        /* alert( response.routes[0].legs[1].duration.text ); */
      }
    });
  }


  calcRoute();

  var handler = Gmaps.build('Google');
  handler.buildMap({ internal: {id: 'directions'}}, function(){
    directionsDisplay.setMap(handler.getMap());
  });
</script>

<% end %>